// <auto-generated />
using System;
using Find.DataLayer.EfCode;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Find.DataLayer.Migrations
{
    //[DbContext(typeof(EfCoreContext))]
//    partial class EfCoreContextModelSnapshot : ModelSnapshot
//    {
////        protected override void BuildModel(ModelBuilder modelBuilder)
////        {
////#pragma warning disable 612, 618
////            modelBuilder
////                .HasAnnotation("Relational:MaxIdentifierLength", 128)
////                .HasAnnotation("ProductVersion", "5.0.10")
////                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

////            modelBuilder.Entity("Find.DataLayer.EfClasses.Idea", b =>
////                {
////                    b.Property<long>("Id")
////                        .ValueGeneratedOnAdd()
////                        .HasColumnType("bigint")
////                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

////                    b.Property<string>("ApprovalComment")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("ApprovedBy")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("CompanyId")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<Guid>("CreatedBy")
////                        .HasColumnType("uniqueidentifier");

////                    b.Property<string>("DateApproved")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<DateTime>("DateCreated")
////                        .HasColumnType("datetime2");

////                    b.Property<string>("Description")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("DevelopmentTechnology")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("EstimatedtimeLine")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("ExpectedIncome")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("Name")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("ProjectAreaId")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("ProposedCost")
////                        .HasColumnType("nvarchar(max)");

////                    b.HasKey("Id");

////                    b.ToTable("Idea");
////                });

////            modelBuilder.Entity("Find.DataLayer.EfClasses.Offer", b =>
////                {
////                    b.Property<long>("Id")
////                        .ValueGeneratedOnAdd()
////                        .HasColumnType("bigint")
////                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

////                    b.Property<DateTime>("DateCreate")
////                        .HasColumnType("datetime2");

////                    b.Property<string>("IdeaId")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("IdeaOwnerComment")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("Proposal")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("Status")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<string>("UserId")
////                        .HasColumnType("nvarchar(max)");

////                    b.HasKey("Id");

////                    b.ToTable("Offer");
////                });

////            modelBuilder.Entity("Find.DataLayer.EfClasses.User", b =>
////                {
////                    b.Property<long>("UserId")
////                        .ValueGeneratedOnAdd()
////                        .HasColumnType("bigint")
////                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

////                    b.Property<string>("BVN")
////                        .IsRequired()
////                        .HasMaxLength(11)
////                        .HasColumnType("nvarchar(11)");

////                    b.Property<DateTime>("DateCreated")
////                        .HasColumnType("datetime2");

////                    b.Property<string>("FirstName")
////                        .IsRequired()
////                        .HasMaxLength(50)
////                        .HasColumnType("nvarchar(50)");

////                    b.Property<int>("Gender")
////                        .HasColumnType("int");

////                    b.Property<string>("HomeAddress")
////                        .HasColumnType("nvarchar(max)");

////                    b.Property<bool>("IsActive")
////                        .HasColumnType("bit");

////                    b.Property<string>("LastName")
////                        .IsRequired()
////                        .HasMaxLength(50)
////                        .HasColumnType("nvarchar(50)");

////                    b.Property<int>("MaritalStatusId")
////                        .HasColumnType("int");

////                    b.Property<string>("MiddleName")
////                        .HasColumnType("nvarchar(max)");

////                    b.HasKey("UserId");

////                    b.ToTable("User");
////                });

////            modelBuilder.Entity("Find.DataLayer.ExtraAuthClasses.ModulesForUser", b =>
////                {
////                    b.Property<string>("UserId")
////                        .HasColumnType("nvarchar(450)");

////                    b.Property<long>("AllowedPaidForModules")
////                        .HasColumnType("bigint");

////                    b.HasKey("UserId");

////                    b.ToTable("UserModule");
////                });

////            modelBuilder.Entity("Find.DataLayer.ExtraAuthClasses.RoleToPermission", b =>
////                {
////                    b.Property<string>("RoleName")
////                        .HasMaxLength(100)
////                        .HasColumnType("nvarchar(100)");

////                    b.Property<string>("Description")
////                        .IsRequired()
////                        .HasColumnType("nvarchar(max)");

////                    b.HasKey("RoleName");

////                    b.ToTable("RoleToPermission");
////                });

////            modelBuilder.Entity("Find.DataLayer.ExtraAuthClasses.TimeStore", b =>
////                {
////                    b.Property<string>("key")
////                        .HasMaxLength(36)
////                        .HasColumnType("nvarchar(36)");

////                    b.Property<long>("LastUpdateTicks")
////                        .HasColumnType("bigint");

////                    b.HasKey("key");

////                    b.ToTable("TimeStore");
////                });

////            modelBuilder.Entity("Find.DataLayer.ExtraAuthClasses.UserToRole", b =>
////                {
////                    b.Property<string>("UserId")
////                        .HasMaxLength(36)
////                        .HasColumnType("nvarchar(36)");

////                    b.Property<string>("RoleName")
////                        .HasColumnType("nvarchar(450)");

////                    b.Property<string>("RoleName1")
////                        .HasColumnType("nvarchar(100)");

////                    b.HasKey("UserId", "RoleName");

////                    b.HasIndex("RoleName1");

////                    b.ToTable("UserToRole");
////                });

////            modelBuilder.Entity("Find.DataLayer.ExtraAuthClasses.UserToRole", b =>
////                {
////                    b.HasOne("Find.DataLayer.ExtraAuthClasses.RoleToPermission", "Role")
////                        .WithMany()
////                        .HasForeignKey("RoleName1");

////                    b.Navigation("Role");
////                });
////#pragma warning restore 612, 618
////        }
//    }
}
